"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[520],{8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return p}});var a=n(3117),r=n(7294),l=n(2389),o=n(9443);var i=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=n(9521),d=n(6010),s="tabItem_1uMI";function c(e){var t,n,a,l=e.lazy,o=e.block,c=e.defaultValue,p=e.values,m=e.groupId,g=e.className,v=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=p?p:v.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),f=(0,u.lx)(h,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===c?c:null!=(t=null!=c?c:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=v[0])?void 0:a.props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=i(),N=b.tabGroupChoices,y=b.setTabGroupChoices,x=(0,r.useState)(k),T=x[0],w=x[1],C=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var L=N[m];null!=L&&L!==T&&h.some((function(e){return e.value===L}))&&w(L)}var I=function(e){var t=e.currentTarget,n=C.indexOf(t),a=h[n].value;a!==T&&(E(t),w(a),null!=m&&y(m,a))},D=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=C.indexOf(e.currentTarget)+1;n=C[a]||C[0];break;case"ArrowLeft":var r=C.indexOf(e.currentTarget)-1;n=C[r]||C[C.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":o},g)},h.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,className:(0,d.Z)("tabs__item",s,{"tabs__item--active":T===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:D,onFocus:I,onClick:I},null!=n?n:t)}))),l?(0,r.cloneElement)(v.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function p(e){var t=(0,l.Z)();return r.createElement(c,(0,a.Z)({key:String(t)},e))}},752:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),o=n(6396),i=n(8215),u=n(9055),d=["components"],s={sidebar_position:3,title:"Loading directive"},c=void 0,p={unversionedId:"loading-store/loading-directive",id:"loading-store/loading-directive",isDocsHomePage:!1,title:"Loading directive",description:"Loading directive provide a simple approach to switch templates when the loading state change. To work correctly the",source:"@site/docs/loading-store/loading-directive.mdx",sourceDirName:"loading-store",slug:"/loading-store/loading-directive",permalink:"/ngx-reactive-loading/docs/loading-store/loading-directive",editUrl:"https://github.com/riccardoperra/ngx-reactive-loading/edit/main/docs/docs/docs/loading-store/loading-directive.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Loading directive"},sidebar:"tutorialSidebar",previous:{title:"Loading service",permalink:"/ngx-reactive-loading/docs/loading-store/loading-service"},next:{title:"Custom tokens",permalink:"/ngx-reactive-loading/docs/loading-store/tokens"}},m=[{value:"API",id:"api",children:[{value:"Inputs",id:"inputs",children:[],level:3}],level:2},{value:"Example",id:"example",children:[],level:2}],g={toc:m};function v(e){var t=e.components,n=(0,r.Z)(e,d);return(0,l.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Loading directive provide a simple approach to switch templates when the loading state change. To work correctly the\nloading service must be provided by a component or module."),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("h3",{id:"inputs"},"Inputs"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[ngxLoading]"),(0,l.kt)("td",{parentName:"tr",align:null},"PropertyKey ","|"," PropertyKey[]"),(0,l.kt)("td",{parentName:"tr",align:null},"[]"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Set the loading state properties that will be observed"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[ngxLoadingElse]"),(0,l.kt)("td",{parentName:"tr",align:null},"TemplateRef ","|"," null"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Render the custom loading template when ",(0,l.kt)("inlineCode",{parentName:"td"},"loading")," is true"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"app.component.ts",label:"src/app/app.component.ts",default:!0,mdxType:"TabItem"},(0,l.kt)(u.Z,{className:"language-ts",mdxType:"CodeBlock"},"import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { LoadingService } from 'ngx-reactive-loading';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: `./app.component.html`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [LoadingService.componentProvider(['add'])],\n})\nclass AppComponent {\n  constructor(private readonly loadingService: LoadingService) {}\n}\n".trim())),(0,l.kt)(i.Z,{value:"app.component.html",label:"src/app/app.component.html",default:!0,mdxType:"TabItem"},(0,l.kt)(u.Z,{className:"language-html",mdxType:"CodeBlock"},"<button *ngxLoading=\"'add'; else loadingTpl\">Add</button>\n<ng-template #loadingTpl> Loading... </ng-template>\n".trim()))))}v.isMDXComponent=!0}}]);